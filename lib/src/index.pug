doctype html
head
  meta(name='viewport' content='width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no')
  meta(charset="utf-8")
  meta(property="og:type" content="website")
  meta(property="og:title" content="SpriteSpin")
  meta(property="og:site_name" content="SpriteSpin")
  meta(property="og:url" content="https://spritespin.ginie.eu/")
  meta(property="og:description" content="a lightweight js library for building input controls with data binding")
  title Tweak UI
  link(rel='stylesheet' href='https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css' integrity='sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T' crossorigin='anonymous')
  script(src='https://code.jquery.com/jquery-3.3.1.slim.min.js' integrity='sha384-q8i/X+965DzO0rT7abK41JStQIAqVgRVzpbzo5smXKp4YfRvH+8abtTE1Pi6jizo' crossorigin='anonymous')
  script(src='https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.7/umd/popper.min.js' integrity='sha384-UO2eT0CpHqdSJQ6hJty5KVphtPhzWj9WO1clHTMGa3JDZwrnQq4sF86dIHNDz0W1' crossorigin='anonymous')
  script(src='https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.min.js' integrity='sha384-JjSmVgyd0p3pXB1rRibZUAYoIIy6OrQ6VrjIEaFf/nJGzIxFDsf4x0xIM+B07jRM' crossorigin='anonymous')
  link(rel='stylesheet' href='https://unpkg.com/prismjs@1.16.0/themes/prism.css')
  script(src='https://unpkg.com/prismjs@1.16.0/prism.js' type='text/javascript')
  style.
    pre[class*="language-"] {
      margin: 0;
    }
    h2, h3 {
      margin-top: 3rem;
    }
body(data-spy="scroll" data-target="#navbar" data-offset="56")
  .jumbotron.jumbotron-fluid.mb-0
    .container
      h1.display-4 SpriteSpin
      p.lead
        | SpriteSpin is a jQuery plugin that turns image frames into animations. It requires an array of images or a stiched sprite sheet and plays them frame by frame like a flip book. The aim of this plugin is to provide a 360 degree view of any kind of product.
      p.lead
        | The plugin is built with extensibility in mind and allows web developers to customize the behavior and presentation of the animations

  .container
    h2#install-npm Installation (NPM)
    section
      p Install library from NPM
      pre.language-shell: code.
        $ npm install spritespin

      p.mt-3 Import the library (here in typescript)
      pre.language-javascript: code.
        import * as SpriteSpin from "spritespin"

      p.mt-3 initialize spritespin
      pre.language-javascript: code.
        SpriteSpin.create({
          target: '.my-element',
          // ... options`
        })

    h2#install-cdn Installation (CDN)
    section
      p Reference the library and style sheet
      aside.language-html
        script(src='./spritespin.js' type='text/javascript')
        //- script(src='https://unpkg.com/spritespin@x.x.x/release/spritespin.js' type='text/javascript')

      p.mt-3 Add a container to your HTML
      aside.language-html
        .my-element

      p.mt-3 initialize spritespin
      pre.language-javascript: code.
        SpriteSpin.create({
          target: '.my-element',
          // ... options`
        })
    h2#sourcecode-git Github
    section
      p
        span get the source at
        a(href="https://github.com/giniedp/spritespin", target="_blank")  github

    h2#examples Examples
    section#simple-example
      h3 Basic Example
      .sprtespin-example
      div
        script(type="text/javascript").language-javascript.
          SpriteSpin.create({
            target: "#simple-example .sprtespin-example",
            source: SpriteSpin.source('http://spritespin.ginie.eu/images/rad_zoom_{frame}.jpg', {
              frame: [1,34], digits: 3
            }),
            width: 480,
            height: 327,
            sense: -1,
            plugins: [
              // module that changes frame on drag
              'drag',
              // module that eases out an animation after mouse is released
              'inertia',
              // module to display array or sprite of images
              '360',
              // module that render and fades additional frames to somulate blur
              'blur'
            ],
          })

    section
      h3 3D Example
      .sprtespin-example-3d
      div
        script(type="text/javascript").language-javascript.
          SpriteSpin.create({
            target: '.sprtespin-example-3d',
            source: SpriteSpin.source('http://spritespin.ginie.eu/images/3d/sample-{lane}-{frame}.jpg', {
              lane: [0, 11],
              frame: [0, 23],
              digits: 2,
            }),
            // width and height of the display
            width: 400,
            height: 225,
            // the number of lanes (vertical angles)
            lanes: 12,
            // the number of frames per lane (per vertical angle)
            frames: 24,
            // interaction sensitivity (and direction) modifier for horizontal movement
            sense: 1,
            // interaction sensitivity (and direction) modifier for vertical movement
            senseLane: -2,

            // the initial lane number
            lane: 6,
            // the initial frame number (within the lane)
            frame: 0,
            // disable autostart of the animation
            animate: false,

            plugins: ['progress', '360', 'drag'],
          })

    script(type='text/javascript').
      (function() {
        function formatText(text) {
          var lines = text.split(/\n/gi).filter((it) => it.trim())
          var indent = Number.MAX_VALUE
          for (var i = 0; i < lines.length; i++) {
            if (lines[i].trim()) {
              indent = Math.min(indent, lines[i].match(/^\s*/)[0].length)
            }
          }
          for (var i = 0; i < lines.length; i++) {
            if (lines[i].trim()) {
              lines[i] = lines[i].substr(indent)
            }
          }
          return lines.join("\n")
        }

        document.querySelectorAll("aside,script.language-javascript,style.language-css").forEach((node) => {
          let pre = document.createElement('pre')
          let code = document.createElement('code')
          pre.appendChild(code)
          code.textContent = formatText(node.innerHTML)
          code.setAttribute("class", node.getAttribute("class"))
          node.parentNode.insertBefore(pre, node.nextSibling)
        })
      }())

